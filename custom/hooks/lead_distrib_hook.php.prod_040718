<?php

class lead_distrib_hook{

	function fix_type(&$bean, $event, $arguments) {
		
		if($bean->date_entered == $bean->date_modified){//new record
			
			if( empty($bean->coverage_type_c) && !empty($bean->aos_product_categories_id_c)  ){
				if($bean->aos_product_categories_id_c == '58969f58-2d7f-6eb7-9b9e-5669c1f53421'){
					$bean->coverage_type_c = 'TradeCreditWebsite';
				}elseif($bean->aos_product_categories_id_c == 'a4613fed-0529-e7f8-446a-5453b0387baf'){
					$bean->coverage_type_c = 'ErrorsOmissionsInsurance';
				}
			}
			
			if( !array_key_exists($bean->coverage_type_c, $GLOBALS['app_list_strings']['lead_coverage_type_list']) ){
				$detected_key = self::tryDetectListKey($bean->coverage_type_c, 'lead_coverage_type_list');
				if( !empty($detected_key) ){
					$bean->coverage_type_c = $detected_key;
				}
			}
		}
		
	}

	function do_distrib(&$bean, $event, $arguments) {
$GLOBALS['log']->fatal("DISTRIB: Before beanID ".$bean->id."  userID: ".$bean->assigned_user_id);
		global $current_user; 
		if($bean->date_entered == $bean->date_modified){//new record
			
			// $allow_from = array(
			// 	//'3c4e92c9-c147-2849-0c10-54f4b2c4a466',//IT support
			// 	//'2547105d-f551-d7bd-56a9-553589fef1f3'//Web
			// 	'8392e688-0e2d-8fa6-1680-57cf7e191917' // Arun k user added by Hk on 22 Feb 2018 
			// );//TODO: add to conf
			//if( in_array($bean->created_by, $allow_from) ){ commented by hk on 4th May2018 as emails are not going out
				$bean->aos_product_categories_id_c = str_replace("%2D","-",$bean->aos_product_categories_id_c); //by Hk on 22Feb2018
				$bean->primary_address_state = str_replace("%20"," ",$bean->primary_address_state); //by Hk on 22Feb2018 
				if(empty($bean->lead_source)){
				$bean->lead_source = $this->remove_http($_SERVER['HTTP_ORIGIN']);        //"GetBonded.ca"; //by Hk on 22Feb2018
				} 
				if(empty($bean->phone_work)){
				$bean->phone_work = $bean->phone_mobile; //by Hk on 22Feb2018 
				}
				require_once('custom/ax/DistribLead.php'); 
				$data = DistribLead::getExtractedDistribData($bean->aos_product_categories_id_c, $bean->primary_address_state);
				/* Added by Hk on 22May2018 to get the default user for lead config if no user is assigned in lead assignments*/
				if(empty($data['primaryUser'])){
					$data['primaryUser'] = DistribLead::getDistribDefaultData(true); 
				} 
$GLOBALS['log']->fatal("DISTRIB: beanID ".$bean->id."  primaryUser: ".@$data['primaryUser']);
			global $timedate;  
				if(!empty($data['primaryUser']) ){   
					$bean->assigned_user_id = $data['primaryUser']; 
					$bean->user_id_c = $data['primaryUser'];
					$bean->first_assignment_time_c = $timedate->nowDb();
					$d = DistribLead::sendAssignNotify($bean, $data); 
				} 
				
			//} commented by hk on 4th May2018 as emails are not going out
			
		}

	}
	/*
	* Function to remove http and https from string
	* Added by HK on 7May2018
	*/
	function remove_http($url) {
	   $disallowed = array('http://', 'https://');
	   foreach($disallowed as $d) {
	      if(strpos($url, $d) === 0) {
	         return str_replace($d, '', $url);
	      }
		   }
		   return $url;
	}
	
	static public function tryDetectListKey($input_value, $list){
		if( !is_array($list) ){
			global $app_list_strings;
			if( isset($app_list_strings[$list]) ){
				$list = $app_list_strings[$list];
			}else{
				return false;
			}
		}
		if( !empty($list) ){
			$list_k = array_map('strtolower', $list);
			
			if( array_key_exists($input_value, $list) ){ return $input_value; }
			$key =  array_search($input_value, $list);
			if( !empty($key) ){return $key;}
			$key =  array_search(strtolower($input_value), $list_k);
			if( !empty($key) ){return $key;}
			
			$input_value = str_ireplace(" ", "", $input_value);
			
			if( array_key_exists($input_value, $list) ){ return $input_value; }
			$key =  array_search($input_value, $list);
			if( !empty($key) ){return $key;}
			$key =  array_search(strtolower($input_value), $list_k);
			if( !empty($key) ){return $key;}
			
			$input_value = str_ireplace("&", "and", $input_value);

			if( array_key_exists($input_value, $list) ){ return $input_value; }
			$key =  array_search($input_value, $list);
			if( !empty($key) ){return $key;}
			$key =  array_search(strtolower($input_value), $list_k);
			if( !empty($key) ){return $key;}
			
			$input_value = str_ireplace("Insurance", "", $input_value);

			if( array_key_exists($input_value, $list) ){ return $input_value; }
			$key =  array_search($input_value, $list);
			if( !empty($key) ){return $key;}
			$key =  array_search(strtolower($input_value), $list_k);
			if( !empty($key) ){return $key;}
			
		}
		return false;
	}	

}